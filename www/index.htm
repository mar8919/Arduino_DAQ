<!DOCTYPE html>
<html>

<head>
	<style type="text/css">
		h1 {color:black;}
		p {color:black;}
		body {font-family:arial}
		table, th, td {
			border: 1px solid black;
			border-collapse: collapse;
		}
	</style>
	<script type="text/javascript">
		var digital_write;
		var digital_read = [];
		var server = [];
	
	
		// Emergency Stop
		function emergency_stop()
		{
			document.getElementById("stop_status").innerHTML = "Sending Stop Signal...";
			server = "/arduino/stop/";
			stop_response = new XMLHttpRequest();
			stop_response.onreadystatechange = stop_recieved;
			stop_response.open("GET", server, false);
			stop_response.send(null);
		}
		
		function stop_recieved()
		{
			if((stop_response.readyState == 4) && (stop_response.status == 200))
			{
				update_buttons("2, 0");	//CO2 to Fuel
				update_buttons("3, 0"); //Fuel to Manifold
				update_buttons("4, 0"); //Ox Flow
				update_buttons("5, 0"); //Ox Purge
				update_buttons("6, 0"); //Pyro Arm
				update_buttons("7, 0"); //Pyro Fire
				document.getElementById("stop_status").innerHTML = "";
			}
		}
		
		
		//Start burn sequence
		function burn_request()
		{
			if(document.getElementById('pin2').value == 1)
			{
				alert("CO2 to Fuel must be on before Fuel to manifold can be opened");
				return;
			}
			server = "/arduino/burn/";
			burn_response = new XMLHttpRequest();
			burn_response.onreadystatechange = burn_recieved;
			burn_response.open("GET", server, false);
			burn_response.send(null);
		}
		
		function burn_recieved()
		{
			if((burn_response.readyState == 4) && (burn_response.status == 200))
			{
				update_buttons("3,1");	//Turn Fuel to Manifold on
				update_buttons("4,1");	//Turn Ox Flow on
			}
		}
		
		//Set state of a pin
		function write_request(Pin, Value)
		{
			server = "/arduino/digital/" + Pin + "/" + Value;
			digital_write = new XMLHttpRequest();
			digital_write.onreadystatechange = write_ready;
			digital_write.open("GET", server, true);
			digital_write.send(null);
		}
		
		//Check if response is ready
		function write_ready()
		{
			if ((digital_write.readyState == 4) && (digital_write.status == 200))
			{
				var write_string = digital_write.responseText;
				update_buttons(write_string);
			}
		}		
		
		
		//Get state of a pin
		function read_request(Pin)
		{
			server = "/arduino/digital/" + Pin;
			digital_read = new XMLHttpRequest();
			digital_read.open("GET", server, false);
			digital_read.send(null);
			var read_string = digital_read.responseText;
			update_buttons(read_string);
		}
		
		
		//Update buttons after response from Arduino
		function update_buttons(response)
		{	
			var parse = response.split(",");
			var PinNum = parse[0];
			var PinState = parse[1];
			var PinId = "pin" + PinNum;
			var ImageId = "image" + PinNum;
			if(PinState == 0)
			{
				PinState = "1";
				button = "off.png";
			}
			else
			{
				PinState = "0";
				button = "on.png";
			}
			document.getElementById(PinId).value = PinState;
			document.getElementById(ImageId).src = button;
		}
		
		function check_states()
		{
			read_request(2);
			read_request(3);
			read_request(4);
			read_request(5);
			read_request(6);
			read_request(7);
			read_request(9);
		}
		
		//Request record change
		function record_request()
		{
			server = "/arduino/record/";
			record = new XMLHttpRequest();
			record.onreadystatechange = function record_response()
				{
					if((record.readyState == 4) && (record.status == 200))
					{
						alert(record.responseText);
					}
				}
			record.open("GET", server, true);
			record.send(null);
		}
		
		
		//delete record file
		function record_delete()
		{
			var line1 = "* * * * * * * CAUTION * * * * * * *\n";
			var line2 = "You are about to clear the output file.\n";
			var line3 = "Are you sure you wish to procede?";
			var input = confirm(line1 + line2 + line3);
			if(input == true)
			{
				server = "/arduino/clear/";
				delete_request = new XMLHttpRequest();
				delete_request.onreadystatechange = function delete_response()
					{
						if((delete_request.readyState == 4) && (delete_request.status == 200))
						{
							alert(delete_request.responseText);
						}
					}
				delete_request.open("GET", server, true);
				delete_request.send(null);
			}
		}
	</script>
</head>

<body onload = "check_states();">

	<h1>Yun Data Acquisition</h1>
	
	<img src="stop.png" 
		onclick="emergency_stop();"
		onmouseover="this.src='stop_hover.png'"
		onmouseout="this.src='stop.png'"
	/>
	<p id="stop_status">
		
	</p>
	<h3>Solenoid Controls:</h3>
	<table  style="width:600px">
		<tr>
			<th>CO2 to Fuel<br>(D2/Sol1)</th>
			<th>Fuel to Manifold<br>(D3/Sol2)</th>
			<th>Ox Flow<br>(D4/Sol3)</th>
			<th>Ox Purge 2<br>(D5/Sol4)</th>
			<th>Burn<br>(Flows Fuel and Ox)</th>
		</tr>
		<tr>
			<td>
				<center>
				<input type="hidden" name ="pin" value="1" id="pin2" />
				<img src="off.png" id="image2"
				onclick="write_request(2, document.getElementById('pin2').value);"
				/>
				</center>
			</td>
			<td>
				<center>
				<input type="hidden" name ="pin" value="1" id="pin3" />
				<img src="off.png" id="image3"
				onclick="write_request(3, document.getElementById('pin3').value);"
				/>
				</center>
			</td>
			<td>
				<center>
				<input type="hidden" name ="pin" value="1" id="pin4" />
				<img src="off.png" id="image4"
				onclick="write_request(4, document.getElementById('pin4').value);"
				/>
				</center>
			</td>
			<td>
				<center>
				<input type="hidden" name ="pin" value="1" id="pin5" />
				<img src="off.png" id="image5"
				onclick="write_request(5, document.getElementById('pin5').value);"
				/>
				</center>
			</td>
			<td>
				<center>
				<button type="button"
				onclick="burn_request();">
					Burn
				</button>
				</center>
			</td>
			
		</tr>
	</table>
	
	<br>
	<h3>Pyro Controls:</h3>
	<table  style="width:450px">
		<tr>
			<th>Test<br>(D9)</th>
			<th>Arm<br>(D6)</th>
			<th>Fire<br>(D7)</th>
		</tr>
		<tr>
			<td>
				<center>
				<input type="hidden" name ="pin" value="1" id="pin9" />
				<img src="off.png" id="image9"
				onclick="write_request(9, document.getElementById('pin9').value);"
				/>
				</center>
			</td>
			<td>
				<center>
				<input type="hidden" name ="pin" value="1" id="pin6" />
				<img src="off.png" id="image6"
				onclick="write_request(6, document.getElementById('pin6').value);"
				/>
				</center>
			</td>
			<td>
				<center>
				<input type="hidden" name ="pin" value="1" id="pin7" />
				<img src="off.png" id="image7"
				onclick="write_request(7, document.getElementById('pin7').value);"
				/>
				</center>
			</td>
			
		</tr>
	</table>
	
	<br>
	<button type="button"
	onclick="record_request();">
		Record
	</button>
	<br>
	<br>
	<a href="http://192.168.240.1/sd/output.csv" download="output.csv">
		<img src="download.png"
		onmouseover="this.src='download_over.png'"
		onmouseout="this.src='download.png'">
	</a>
	<br>
	<br>
	<br>
	<br>
	<br>
	<button type="button"
	onclick="record_delete();">
		Clear Output File
	</button>
	<p>
		<h4>Typical Steps:</h4>
		1. Click <i>Clear Output File</i> if you with to clear the CSV file stored on the Yun<br>
		2. Click <i>Record</i> when you are ready to begin acquiring data 
			(NOTE: controls are functional even when not recording).<br>
		3. Click <i>Record</i> again when you are done recording.<br>
		3. Click <i>Download Output</i> to download the current CSV file from the Yun.
	</p>
</body>
</html>